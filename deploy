#!/bin/bash

function ask_yesno {
    read -p "$1 (Y/n)" answer
    case ${answer:0:1} in
        n|N )
            return 1
        ;;
        * )
            return 0
        ;;
    esac
}

function copy_with_backup {
    if [ -f "$2" ]; then
        mv "$2" "$2.bak"
        echo "  '$2' => '$2.bak'"
    fi
    cp $1 $2
}

if ! ask_yesno 'This script may overwrite any existent file. Continue?'; then
    exit 1
fi

if ask_yesno 'Install zsh dotfiles?'; then
    set -e
    copy_with_backup zsh/zshrc "$HOME/.zshrc"
    cp -rT zsh/zsh-custom "$HOME/.zsh-custom"
    copy_with_backup zsh/custom.zsh "$HOME/.zsh-custom/custom.zsh"
    echo "Please edit $HOME/.zsh-custom/custom.zsh to meet your requirements."
    set +e
fi

if ask_yesno 'Install bash dotfiles?'; then
    set -e
    for i in rc _profile; do
        copy_with_backup bash/bash$i "$HOME/.bash$i"
    done
    set +e
fi

if ask_yesno 'Install vim dotfiles? This will install Vundle as well.'; then
    set -e
    echo 'Please ignore any error message related to color scheme.'
    mkdir -p "$HOME/.vim/bundle"
    if [ -e "$HOME/.vim/bundle/Vundle.vim" ]; then
        rm -rf "$HOME/.vim/bundle/Vundle.vim"
    fi
    git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
    for i in vimrc vimrc-common vimrc-commonplugins vimrc-gui vimrc-ycm; do
        copy_with_backup vim/$i "$HOME/.$i"
    done
    cp -rT vim/vim-after "$HOME/.vim/after"
    vim +PluginInstall +qall
    set +e
fi

if ask_yesno 'Install tmux dotfiles?'; then
    set -e
    copy_with_backup tmux/tmux.conf "$HOME/.tmux.conf"
    set +e
fi

if ask_yesno 'Install .Xresources?'; then
    set -e
    copy_with_backup xrdb/Xresources "$HOME/.Xresources"
    echo 'Refreshing X resource database'
    xrdb "$HOME/.Xresources"
    set +e
fi
